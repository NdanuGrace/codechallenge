{"ast":null,"code":"var _jsxFileName = \"/home/ndanu/Development/code/phase-2/codechallenge/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTransactionForm(_ref) {\n  _s();\n\n  let {\n    submit\n  } = _ref;\n  const [submittedData, setSubmittedData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n  const [data, setData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = {\n      date: data.date,\n      description: data.description,\n      category: data.category,\n      amount: data.amount\n    };\n    submit(formData);\n  }\n\n  function handle(e) {\n    const newdata = { ...data\n    };\n    newdata[e.target.id] = e.target.value;\n    setData(newdata);\n    console.log(newdata);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handle(e),\n          id: \"date\",\n          value: data.date,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handle(e),\n          id: \"description\",\n          value: data.description,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handle(e),\n          id: \"category\",\n          value: data.category,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handle(e),\n          id: \"amount\",\n          value: data.amount,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"JNxN2l8p0gMCRMb0xi5zoow2QL4=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","AddTransactionForm","submit","submittedData","setSubmittedData","date","description","category","amount","data","setData","handleSubmit","e","preventDefault","formData","handle","newdata","target","id","value","console","log"],"sources":["/home/ndanu/Development/code/phase-2/codechallenge/code-challenge/src/components/AddTransactionForm.js"],"sourcesContent":["import React ,{useState}from \"react\";\n\n\nfunction AddTransactionForm({submit}) {\n\n   const[submittedData, setSubmittedData] = useState({\n    date:\"\",\n    description: \"\",\n    category:\"\",\n    amount: 0\n})\n   const[data, setData] = useState ({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n\n   })\n\nfunction handleSubmit(e){\n  e.preventDefault();\n  const formData={\n  date: data.date,\n  description: data.description,\n  category: data.category,\n  amount: data.amount\n\n}\nsubmit(formData)\n    \n}\n\n\n\n\n   function handle(e){\n     const newdata={...data}\n     newdata[e.target.id]= e.target.value\n     setData(newdata)\nconsole.log(newdata)\n   }\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit ={(e) => handleSubmit(e)} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input onChange={(e) =>handle(e)} id=\"date\" value={data.date}type=\"date\" name=\"date\" />\n          <input  onChange={(e) =>handle(e)} id=\"description\" value={data.description} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input  onChange={(e) =>handle(e)} id=\"category\" value={data.category} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input  onChange={(e) =>handle(e)} id=\"amount\" value={data.amount} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">  \n          Add Transaction\n        </button>\n      </form>\n     \n    \n    </div>\n  );\n}\n\nexport default AddTransactionForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;;;AAGA,SAASC,kBAAT,OAAsC;EAAA;;EAAA,IAAV;IAACC;EAAD,CAAU;EAEnC,MAAK,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC;IACjDK,IAAI,EAAC,EAD4C;IAEjDC,WAAW,EAAE,EAFoC;IAGjDC,QAAQ,EAAC,EAHwC;IAIjDC,MAAM,EAAE;EAJyC,CAAD,CAAjD;EAMA,MAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAE;IAChCK,IAAI,EAAE,EAD0B;IAEhCC,WAAW,EAAE,EAFmB;IAGhCC,QAAQ,EAAE,EAHsB;IAIhCC,MAAM,EAAE;EAJwB,CAAF,CAA/B;;EAQH,SAASG,YAAT,CAAsBC,CAAtB,EAAwB;IACtBA,CAAC,CAACC,cAAF;IACA,MAAMC,QAAQ,GAAC;MACfT,IAAI,EAAEI,IAAI,CAACJ,IADI;MAEfC,WAAW,EAAEG,IAAI,CAACH,WAFH;MAGfC,QAAQ,EAAEE,IAAI,CAACF,QAHA;MAIfC,MAAM,EAAEC,IAAI,CAACD;IAJE,CAAf;IAOFN,MAAM,CAACY,QAAD,CAAN;EAEC;;EAKE,SAASC,MAAT,CAAgBH,CAAhB,EAAkB;IAChB,MAAMI,OAAO,GAAC,EAAC,GAAGP;IAAJ,CAAd;IACAO,OAAO,CAACJ,CAAC,CAACK,MAAF,CAASC,EAAV,CAAP,GAAsBN,CAAC,CAACK,MAAF,CAASE,KAA/B;IACAT,OAAO,CAACM,OAAD,CAAP;IACLI,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACI;;EACF,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE;MAAM,QAAQ,EAAIJ,CAAD,IAAOD,YAAY,CAACC,CAAD,CAApC;MAAyC,SAAS,EAAC,SAAnD;MAAA,wBACE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UAAO,QAAQ,EAAGA,CAAD,IAAMG,MAAM,CAACH,CAAD,CAA7B;UAAkC,EAAE,EAAC,MAArC;UAA4C,KAAK,EAAEH,IAAI,CAACJ,IAAxD;UAA6D,IAAI,EAAC,MAAlE;UAAyE,IAAI,EAAC;QAA9E;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,QAAQ,EAAGO,CAAD,IAAMG,MAAM,CAACH,CAAD,CAA9B;UAAmC,EAAE,EAAC,aAAtC;UAAoD,KAAK,EAAEH,IAAI,CAACH,WAAhE;UAA6E,IAAI,EAAC,MAAlF;UAAyF,IAAI,EAAC,aAA9F;UAA4G,WAAW,EAAC;QAAxH;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,QAAQ,EAAGM,CAAD,IAAMG,MAAM,CAACH,CAAD,CAA9B;UAAmC,EAAE,EAAC,UAAtC;UAAiD,KAAK,EAAEH,IAAI,CAACF,QAA7D;UAAuE,IAAI,EAAC,MAA5E;UAAmF,IAAI,EAAC,UAAxF;UAAmG,WAAW,EAAC;QAA/G;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAQ,QAAQ,EAAGK,CAAD,IAAMG,MAAM,CAACH,CAAD,CAA9B;UAAmC,EAAE,EAAC,QAAtC;UAA+C,KAAK,EAAEH,IAAI,CAACD,MAA3D;UAAmE,IAAI,EAAC,QAAxE;UAAiF,IAAI,EAAC,QAAtF;UAA+F,WAAW,EAAC,QAA3G;UAAoH,IAAI,EAAC;QAAzH;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAQ,SAAS,EAAC,WAAlB;QAA8B,IAAI,EAAC,QAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAvDQP,kB;;KAAAA,kB;AAyDT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}