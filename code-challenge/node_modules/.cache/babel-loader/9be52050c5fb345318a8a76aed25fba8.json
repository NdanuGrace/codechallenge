{"ast":null,"code":"var _jsxFileName = \"/home/ndanu/Development/code/phase-2/codechallenge/code-challenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AccountContainer from \"./AccountContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      const res = fetch(\"http://localhost:8001/transactions\");\n      const jsonRes = await res.json();\n      setTransactions(jsonRes);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleAddTransaction = transaction => {\n    setTransactions([...transactions, transaction]);\n  };\n\n  const handleDeleteTransaction = transId => {\n    const filterTransactions = transactions.filter(trans => trans.id !== transId);\n    setTransactions(filterTransactions);\n  };\n\n  const handleSearch = searchTerm => {\n    if (searchTerm) {\n      const filteredTransactions = transactions.filter(trans => {\n        if (trans.description.toLowerCase().match(searchTerm.toLowerCase())) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setTransactions(filteredTransactions);\n    } else {\n      fetchTransactions();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui raised segment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment violet inverted\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Royal Bank of Flatiron\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AccountContainer, {\n      handleAddTransaction: handleAddTransaction,\n      transactions: transactions,\n      handleSearch: handleSearch,\n      handleDeleteTransaction: handleDeleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AccountContainer","App","transactions","setTransactions","fetchTransactions","res","fetch","jsonRes","json","error","console","log","handleAddTransaction","transaction","handleDeleteTransaction","transId","filterTransactions","filter","trans","id","handleSearch","searchTerm","filteredTransactions","description","toLowerCase","match"],"sources":["/home/ndanu/Development/code/phase-2/codechallenge/code-challenge/src/components/App.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n\tconst [transactions, setTransactions] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchTransactions();\n\t}, []);\n\n\tconst fetchTransactions = async () => {\n\t\ttry {\n\t\t\tconst res =  fetch(\"http://localhost:8001/transactions\");\n\t\t\tconst jsonRes = await res.json();\n\t\t\tsetTransactions(jsonRes);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\tconst handleAddTransaction = (transaction) => {\n\t\tsetTransactions([...transactions, transaction]);\n\t};\n\tconst handleDeleteTransaction = (transId) => {\n\t\tconst filterTransactions = transactions.filter(\n\t\t\t(trans) => trans.id !== transId\n\t\t);\n\n\t\tsetTransactions(filterTransactions);\n\t};\n\tconst handleSearch = (searchTerm) => {\n\t\tif (searchTerm) {\n\t\t\tconst filteredTransactions = transactions.filter((trans) => {\n\t\t\t\tif (trans.description.toLowerCase().match(searchTerm.toLowerCase())) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTransactions(filteredTransactions);\n\t\t} else {\n\t\t\tfetchTransactions();\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"ui raised segment\">\n\t\t\t<div className=\"ui segment violet inverted\">\n\t\t\t\t<h2>The Royal Bank of Flatiron</h2>\n\t\t\t</div>\n\t\t\t<AccountContainer\n\t\t\t\thandleAddTransaction={handleAddTransaction}\n\t\t\t\ttransactions={transactions}\n\t\t\t\thandleSearch={handleSearch}\n\t\t\t\thandleDeleteTransaction={handleDeleteTransaction}\n\t\t\t/>\n\t\t</div>\n\t\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACfK,iBAAiB;EACjB,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,iBAAiB,GAAG,YAAY;IACrC,IAAI;MACH,MAAMC,GAAG,GAAIC,KAAK,CAAC,oCAAD,CAAlB;MACA,MAAMC,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;MACAL,eAAe,CAACI,OAAD,CAAf;IACA,CAJD,CAIE,OAAOE,KAAP,EAAc;MACfC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA;EACD,CARD;;EASA,MAAMG,oBAAoB,GAAIC,WAAD,IAAiB;IAC7CV,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBW,WAAlB,CAAD,CAAf;EACA,CAFD;;EAGA,MAAMC,uBAAuB,GAAIC,OAAD,IAAa;IAC5C,MAAMC,kBAAkB,GAAGd,YAAY,CAACe,MAAb,CACzBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaJ,OADE,CAA3B;IAIAZ,eAAe,CAACa,kBAAD,CAAf;EACA,CAND;;EAOA,MAAMI,YAAY,GAAIC,UAAD,IAAgB;IACpC,IAAIA,UAAJ,EAAgB;MACf,MAAMC,oBAAoB,GAAGpB,YAAY,CAACe,MAAb,CAAqBC,KAAD,IAAW;QAC3D,IAAIA,KAAK,CAACK,WAAN,CAAkBC,WAAlB,GAAgCC,KAAhC,CAAsCJ,UAAU,CAACG,WAAX,EAAtC,CAAJ,EAAqE;UACpE,OAAO,IAAP;QACA,CAFD,MAEO;UACN,OAAO,KAAP;QACA;MACD,CAN4B,CAA7B;MAOArB,eAAe,CAACmB,oBAAD,CAAf;IACA,CATD,MASO;MACNlB,iBAAiB;IACjB;EACD,CAbD;;EAcA,oBACC;IAAK,SAAS,EAAC,mBAAf;IAAA,wBACC;MAAK,SAAS,EAAC,4BAAf;MAAA,uBACC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QADD,eAIC,QAAC,gBAAD;MACC,oBAAoB,EAAEQ,oBADvB;MAEC,YAAY,EAAEV,YAFf;MAGC,YAAY,EAAEkB,YAHf;MAIC,uBAAuB,EAAEN;IAJ1B;MAAA;MAAA;MAAA;IAAA,QAJD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAcA;;GAtDQb,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}